Version 1.5.0-dev
  * Add support for multiple Exception nodes
  * Add a length key when creating MapArray
  * Add Orfeo Toolbox support for applications as a service
  * Add the otb2zcfg utility to produce zcfg for otb applications
  * Add OTB Application Observer to have progress status updates
  * Fix maxOccurs handling
  * Fix gesture of downloaded inputs when multiple values are given
  * Add detection of generated_file key in outputs to read the file generated by a service

Version 1.4.0
  * Small fix for mimeType of results for CGAL services

Version 1.4.0-rc1
  * Binary support for PHP language
  * ZOO-API for the Java language
  * ZOO-Client Javascript API
  * FastCGI fixes
  * JavaScript ZOO-API enhancements (COOKIE use and Output in generated XML)
  * Add debian files
  * Inputs passed by reference downloaded in parallel
  * Conform behavior for DescribeProcess when the Identifier was not found
  * Add support of maximumMegabytes keywords for ComplexData Inputs
  * Add the optional YAML ZCFG support #4 and the zcfg2yaml converter
  * Return error messages that enable the service provider to quickly identify the root cause of errors due to configuration file syntax (ticket #90)
  * Fix logic in addMapToMap (ticket #91)
  * Enable AllowedValue and multiple Range definitions using default and supported blocks
  * Add the lastest revision number in version.h (available in Python ZOO-API)
  * Add the optional Ruby Language Support to the ZOO-Kernel with an API similar to the Python ZOO-API
  * Small rewrite of Python support
  * Inputs can be requested over https protocol (ticket #86)
  * Add capability to define both percentage of execution and a message (ticket #87). 
  * Add usid in lenv section used to generate an unique identifier based on time and the process identifier.
  * Add gdal_contour service
  * Add dynamic definition of serverAddress from the main section

Version 1.3.0-rc2
  * Fix POST Request issue (ticket #34)
  * Fix COOKIE gesture (ticket #79)
  * Remove verbose messages when using MapServer W*S (ticket #80)
  * Add COMMITTERS  and LICENSE files

Version 1.3.0-rc1

  * Updating ZOO.Class object with the OpenLayers.Class Updating ZOO.Class with the (ticket #64)
  * Correct the content of proj4js (ticket #63)
  * Enhance the COOKIE gesture (ticket #68)
  * Support for dataInputs URLEncoded and xlink:href (ticket #62)
  * Use the same object structure for JavaScript arguments than for Python
  * Add the Normalized Difference Vegetation Index service
  * Add importScripts function to JavaScript support (ticket #66)
  * Add multiple inputs values for the same identifier (ticket #72)
  * Add Python ZOO-API to access ZOO-Kernel internel functions
  * Add a [headers] section in main.cfg file to add specifics to header returned
  * Add support for multiple outputs for both GET and POST requests
  * Add Content-Length to the headers if the result is sized
  * Add Content-Disposition to the headers if the result contains a filename
  * Add support for sending headers through JS ZOO-api
  * Add support for multi-valued inputs in JS ZOO-api
  * Fixing issue about invalid status document #73
  * Add Python-3.3.0 support
  * Update documentation
  * Add MapServer W*S Support documentation #34

Version 1.2.0-rc3

  * add basic SOAP Envelope support (ticket #49)
  * support request when Content-Length header is not set by the client (ticket #57)
  * fix issue when POST request is empty (ticket #45)
  * add minimalist cache system (ticket #51)
  * fix Python support (ticket #29)

Verseion 1.2.0-rc2

  * fix for process to run in background
  * add support for ALL identifier for !DescribeProcess
  * add a small test suite in the testing directory to test ogr base-vect-ops
  * big fix for storage of Session maps on disk
  * support for {{{<Default />}}} node in ZCFG files
  * fastcgi version now support both !GetCapabilities and !DescribeProcess requests

Version 1.2.0-rc1

  * add WIN32 support
  * add GRASS support through wps-grass-bridge
  * add languages support using libintl 
  * binary support for inputs and outputs for both JAVA and Python
  * automatic loading of ZOO-API and proj4js files (if present in the ZOO-Kernel directory) when loading JS Service Provider 
  * numerous memory leaks removed
  * add PERL support
  * enhance speed for JAVA support 
  * enhance POST request support
  * add !BoundingBoxData support
  * Python support is now optional as other languages
  * add lenv section before running the service to store informations runtime specific 
  * add COOKIE support and {{{senv}}} section to store informations session specific
  * add {{{USE_GDB}}} compilation flag to remove signal handling for debuging purpose
  * enhance base64 support when included in and XML POST request
  * return !ExceptionReport when no protocol was specified for xlink:href value

